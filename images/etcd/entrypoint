#!/bin/bash -l

set -e

[[ -f /etc/entrypoint ]] && . /etc/entrypoint

[[ $DEBUG == 'true' ]] && set -x

: ${ETCD_USE_TLS:=true}
: ${ETCD_BIND_INTERFACE:=eth1}
: ${ETCD_BIND_ADDR:=$(get-ipv4 $ETCD_BIND_INTERFACE)}

if [[ $ETCD_USE_TLS == 'true' ]]; then
    ETCD_DEFAULT_PROTO=http

    ETCD_CERT_FILE=/etc/ssl/etcd/etcd.pem
    ETCD_KEY_FILE=/etc/ssl/etcd/etcd-key.pem
    ETCD_TRUSTED_CA_FILE=/etc/ssl/etcd/ca.pem

    ETCD_CLIENT_CERT_AUTH=true

    ETCDCTL_CA_FILE=/etc/ssl/etcd/ca.pem
    ETCDCTL_CERT_FILE=/etc/ssl/etcd/etcd.pem
    ETCDCTL_KEY_FILE=/etc/ssl/etcd/etcd-key.pem
else
    ETCD_DEFAULT_PROTO=http
fi

ETCD_DATA_DIR=/var/lib/etcd/default.etcd
ETCD_INITIAL_CLUSTER_STATE=new

ETCD_LISTEN_CLIENT_URLS=${ETCD_DEFAULT_PROTO}://0.0.0.0:2379,http://127.0.0.1:4001

ETCDCTL_ENDPOINTS=${ETCD_DEFAULT_PROTO}://localhost:2379
ETCDCTL_API=3

: ${ETCD_NAME:=$(hostname -s)}
: ${ETCD_LISTEN_PEER_URLS:=${ETCD_DEFAULT_PROTO}://$ETCD_BIND_ADDR:2380}
: ${ETCD_ADVERTISE_CLIENT_URLS:=${ETCD_DEFAULT_PROTO}://$ETCD_BIND_ADDR:2379}
: ${ETCD_INITIAL_ADVERTISE_PEER_URLS:=${ETCD_DEFAULT_PROTO}://$ETCD_BIND_ADDR:2380}
: ${ETCD_LOG_PACKAGE_LEVELS:=etcdserver=WARNING,security=WARNING}

if [[ -z $ETCD_BOOTSTRAP_NAMES ]]; then
    ETCD_BOOTSTRAP_NAMES=$ETCD_NAME
    log::m-warn "ETCD_BOOTSTRAP_NAMES was not provided. Assuming this is a single-node cluster with node: $ETCD_NAME"
fi

if [[ -z $ETCD_INITIAL_CLUSTER_TOKEN ]]; then
    ETCD_INITIAL_CLUSTER_TOKEN=971658bc2f5bdee5660844a83b5bf0a2
    log::m-warn "ETCD_INITIAL_CLUSTER_TOKEN has not been overridden. This is insecure and not recommended in production!"
fi

if [[ -z $ETCD_INITIAL_CLUSTER ]]; then
    names=()
    for name in ${ETCD_BOOTSTRAP_NAMES//,/ }; do
        domain=${name}.local.$(dnsdomainname)
        until [[ $(dig +short $domain | wc -l | awk '{print $1}') -gt 0 ]]; do
            printf '.'
            sleep 1
        done
        echo ''
        names+=($name=${ETCD_DEFAULT_PROTO}://$(dig +short $domain):2380)
        unset domain
    done
    ETCD_INITIAL_CLUSTER=$(echo "${names[@]}" | sed 's/ /,/g')
    unset names
fi

tee /etc/environment.d/40-etcd <<-EOF
ETCD_NAME=$ETCD_NAME
ETCD_DATA_DIR=$ETCD_DATA_DIR
ETCD_LOG_PACKAGE_LEVELS=$ETCD_LOG_PACKAGE_LEVELS

ETCDCTL_ENDPOINTS=$ETCDCTL_ENDPOINTS
ETCDCTL_API=$ETCDCTL_API

ETCD_LISTEN_CLIENT_URLS=$ETCD_LISTEN_CLIENT_URLS
ETCD_LISTEN_PEER_URLS=$ETCD_LISTEN_PEER_URLS

ETCD_ADVERTISE_CLIENT_URLS=$ETCD_ADVERTISE_CLIENT_URLS

ETCD_INITIAL_ADVERTISE_PEER_URLS=$ETCD_INITIAL_ADVERTISE_PEER_URLS
ETCD_INITIAL_CLUSTER_STATE=$ETCD_INITIAL_CLUSTER_STATE
ETCD_INITIAL_CLUSTER_TOKEN=$ETCD_INITIAL_CLUSTER_TOKEN
ETCD_INITIAL_CLUSTER=$ETCD_INITIAL_CLUSTER
EOF

if [[ $ETCD_USE_TLS == 'true' ]]; then
    tee --append /etc/environment.d/40-etcd <<-EOF

ETCD_CERT_FILE=$ETCD_CERT_FILE
ETCD_KEY_FILE=$ETCD_KEY_FILE
ETCD_TRUSTED_CA_FILE=$ETCD_TRUSTED_CA_FILE
ETCD_CLIENT_CERT_AUTH=$ETCD_CLIENT_CERT_AUTH

ETCDCTL_CA_FILE=$ETCDCTL_CA_FILE
ETCDCTL_CERT_FILE=$ETCDCTL_CERT_FILE
ETCDCTL_KEY_FILE=$ETCDCTL_KEY_FILE
EOF
fi

echo 'source /etc/environment' > ~/.bashrc

log::m-info "Starting $APP ..."
cd ~
    source /etc/environment
    exec gosu $USER etcd
